╔════════════════════════════════════════════════════════════════╗
║                                                                ║
║     ██████╗ ██╗  ██╗ █████╗ ██████╗     ██╗     ██╗████████╗  ║
║    ██╔═══██╗██║  ██║██╔══██╗██╔══██╗    ██║     ██║╚══██╔══╝  ║
║    ██║   ██║███████║███████║██████╔╝    ██║     ██║   ██║     ║
║    ██║   ██║██╔══██║██╔══██║██╔══██╗    ██║     ██║   ██║     ║
║    ╚██████╔╝██║  ██║██║  ██║██║  ██║    ███████╗██║   ██║     ║
║     ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝    ╚══════╝╚═╝   ╚═╝     ║
║                                                                ║
║                   LITERÁRIO - Versão Django                    ║
║                                                                ║
╚════════════════════════════════════════════════════════════════╝

┌─────────────────────────────────────────────────────────────────┐
│                    🚀 INÍCIO RÁPIDO (3 PASSOS)                  │
└─────────────────────────────────────────────────────────────────┘

┌─ PASSO 1: INSTALAR DJANGO ────────────────────────────────────┐
│                                                                 │
│  Windows:                                                       │
│  > pip install -r requirements.txt                             │
│                                                                 │
│  Linux/Mac:                                                     │
│  $ pip3 install -r requirements.txt                            │
│                                                                 │
└─────────────────────────────────────────────────────────────────┘

┌─ PASSO 2: CONFIGURAR BANCO DE DADOS ──────────────────────────┐
│                                                                 │
│  > cd olhar_literario_django                                   │
│  > python manage.py migrate                                    │
│                                                                 │
│  ✓ Banco de dados criado!                                      │
│                                                                 │
└─────────────────────────────────────────────────────────────────┘

┌─ PASSO 3: INICIAR SERVIDOR ───────────────────────────────────┐
│                                                                 │
│  Opção A (Automático - Windows):                               │
│  > Duplo clique em: iniciar_django.bat                        │
│                                                                 │
│  Opção B (Manual):                                             │
│  > python manage.py runserver                                  │
│                                                                 │
└─────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────┐
│                        ✨ PRONTO!                               │
│                                                                 │
│  Site rodando em:                                              │
│  🌐 http://localhost:8000                                      │
│                                                                 │
│  Painel Admin:                                                 │
│  👨‍💼 http://localhost:8000/admin                                │
│     (Crie um superusuário primeiro - veja abaixo)             │
│                                                                 │
└─────────────────────────────────────────────────────────────────┘

┌─────────────────────────────────────────────────────────────────┐
│                   🔑 CRIAR ADMINISTRADOR                        │
└─────────────────────────────────────────────────────────────────┘

  > cd olhar_literario_django
  > python manage.py createsuperuser

  Siga as instruções para criar seu usuário admin!

┌─────────────────────────────────────────────────────────────────┐
│                     📚 O QUE VOCÊ GANHA?                        │
└─────────────────────────────────────────────────────────────────┘

  ✅ Banco de dados profissional (SQLite/PostgreSQL/MySQL)
  ✅ Sistema de usuários completo
  ✅ Autenticação segura com tokens
  ✅ API RESTful funcional
  ✅ Painel administrativo automático
  ✅ Upload de fotos de perfil
  ✅ Comentários e avaliações salvos
  ✅ Migrações automáticas do banco
  ✅ Testes automatizados
  ✅ Segurança integrada
  ✅ Pronto para produção!

┌─────────────────────────────────────────────────────────────────┐
│                   📖 DOCUMENTAÇÃO COMPLETA                      │
└─────────────────────────────────────────────────────────────────┘

  📄 README_DJANGO.md        - Documentação completa
  ⚡ QUICKSTART_DJANGO.md    - Guia de início rápido
  🛠️ COMANDOS_DJANGO.md      - Lista de comandos úteis
  🔄 migrate_to_django.py    - Migrar dados do Flask
  ⚖️ comparacao_flask_django.py - Comparação detalhada

┌─────────────────────────────────────────────────────────────────┐
│                     🆘 PRECISA DE AJUDA?                        │
└─────────────────────────────────────────────────────────────────┘

  Problema: "Não consigo instalar o Django"
  Solução:  Verifique se o Python está instalado
            > python --version
            Deve ser Python 3.8 ou superior

  Problema: "Porta 8000 já está em uso"
  Solução:  Use outra porta:
            > python manage.py runserver 8080

  Problema: "Erro ao fazer migrate"
  Solução:  Delete o arquivo db.sqlite3 e tente novamente
            > del db.sqlite3   (Windows)
            > rm db.sqlite3    (Linux/Mac)
            > python manage.py migrate

  Problema: "Esqueci a senha do admin"
  Solução:  Mude a senha:
            > python manage.py changepassword SEU_USUARIO

┌─────────────────────────────────────────────────────────────────┐
│                    🎯 PRÓXIMOS PASSOS                           │
└─────────────────────────────────────────────────────────────────┘

  1. Criar superusuário (para acessar /admin)
  2. Explorar o painel administrativo
  3. Testar o cadastro e login no site
  4. Adicionar comentários aos livros
  5. Personalizar os models (se necessário)
  6. Fazer backup do banco de dados
  7. Configurar para produção (se for publicar)

┌─────────────────────────────────────────────────────────────────┐
│                 📊 PAINEL ADMINISTRATIVO                        │
└─────────────────────────────────────────────────────────────────┘

  O Django cria automaticamente um painel admin completo!

  Funcionalidades:
  • Gerenciar usuários e perfis
  • Visualizar todos os comentários
  • Moderar avaliações
  • Ver estatísticas
  • Buscar e filtrar dados
  • Exportar dados
  • Permissões e grupos

  Acesse: http://localhost:8000/admin

┌─────────────────────────────────────────────────────────────────┐
│                  🔄 MIGRAR DADOS DO FLASK?                      │
└─────────────────────────────────────────────────────────────────┘

  Se você já usava a versão Flask e tem dados no database.db:

  > python migrate_to_django.py

  Isso irá:
  ✓ Migrar todos os usuários
  ✓ Migrar todos os comentários
  ✓ Preservar senhas (hash mantido)
  ⚠ Tokens precisarão ser regenerados

┌─────────────────────────────────────────────────────────────────┐
│               ⚙️ COMANDOS MAIS USADOS                           │
└─────────────────────────────────────────────────────────────────┘

  python manage.py runserver        # Iniciar servidor
  python manage.py migrate          # Aplicar migrações
  python manage.py makemigrations   # Criar migrações
  python manage.py createsuperuser  # Criar admin
  python manage.py shell            # Console interativo
  python manage.py test             # Executar testes
  python manage.py collectstatic    # Coletar arquivos estáticos

  Veja mais em: COMANDOS_DJANGO.md

┌─────────────────────────────────────────────────────────────────┐
│                    🚀 DEPLOY EM PRODUÇÃO                        │
└─────────────────────────────────────────────────────────────────┘

  Antes de fazer deploy:

  1. Altere SECRET_KEY em settings.py
  2. Configure DEBUG = False
  3. Configure ALLOWED_HOSTS
  4. Use PostgreSQL ou MySQL (não SQLite)
  5. Configure arquivos estáticos
  6. Habilite HTTPS
  7. Configure backup automático

  Plataformas recomendadas:
  • Heroku (fácil)
  • PythonAnywhere (simples)
  • DigitalOcean (flexível)
  • AWS (escalável)
  • Azure (completo)

┌─────────────────────────────────────────────────────────────────┐
│                   💡 DICAS E TRUQUES                            │
└─────────────────────────────────────────────────────────────────┘

  • Use o shell do Django para testar queries:
    > python manage.py shell

  • Faça backup regular do banco:
    > python manage.py dumpdata > backup.json

  • Use fixtures para dados de teste:
    > python manage.py loaddata fixtures.json

  • Instale django-debug-toolbar para debug visual:
    > pip install django-debug-toolbar

  • Explore o painel admin - ele é muito poderoso!

  • Leia COMANDOS_DJANGO.md para mais truques

┌─────────────────────────────────────────────────────────────────┐
│                     🎓 APRENDA MAIS                             │
└─────────────────────────────────────────────────────────────────┘

  Documentação Oficial:
  🌐 https://docs.djangoproject.com/

  Tutorial Oficial:
  🌐 https://docs.djangoproject.com/en/stable/intro/tutorial01/

  Django Girls Tutorial (excelente para iniciantes):
  🌐 https://tutorial.djangogirls.org/

  Django REST Framework:
  🌐 https://www.django-rest-framework.org/

╔════════════════════════════════════════════════════════════════╗
║                                                                ║
║            Desenvolvido com ❤️ usando Django                   ║
║                                                                ║
║        Olhar Literário - Sua biblioteca online completa!      ║
║                                                                ║
╚════════════════════════════════════════════════════════════════╝
